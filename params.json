{
  "name": "Mrange",
  "tagline": "input range for zepto",
  "body": "# MRange\r\n[MRange](https://github.com/xyyjk/MRange) 是一个基于 `Zepto.js` 的滑动选取数值范围组件\r\n\r\n## 使用\r\n\r\n通过添加自定义属性 `data-role=\"range\"` 来进行实例初始化，HTML 结构参照如下示例：\r\n\r\n### 单点滑动：\r\n\r\n``` html\r\n<div class=\"input-range\"\r\n  data-role=\"range\"\r\n  data-min=\"-11.5\"\r\n  data-max=\"3\"\r\n  data-step=\"2.6\"\r\n  data-value=\"-2\"\r\n  data-name=\"testing1\"\r\n>\r\n  <input type=\"hidden\" data-input>\r\n  <div class=\"track\" data-track></div>\r\n  <div class=\"pointer\" data-pointer></div>\r\n  <div class=\"label\" data-label></div>\r\n</div>\r\n```\r\n\r\n- data-input: 对 `input` 元素设置该属性可在滑动时实时改变值\r\n- data-track: 滑动轨道\r\n- data-pointer: 滑动点\r\n- data-label: 滑动值显示\r\n\r\n### 多点滑动：\r\n\r\n``` html\r\n<div class=\"input-range\"\r\n  data-role=\"range\"\r\n  data-min=\"-13\"\r\n  data-max=\"2\"\r\n  data-step=\"2\"\r\n  data-value=\"-9, -3\"\r\n  data-name=\"testing2\"\r\n>\r\n  <input type=\"hidden\" data-input>\r\n  <div class=\"track\" data-track></div>\r\n  <div class=\"pointer pointer--low\" data-pointer-low></div>\r\n  <div class=\"pointer pointer--high\" data-pointer-high></div>\r\n  <div class=\"label label--low\" data-label-low></div>\r\n  <div class=\"label label--high\" data-label-high></div>\r\n</div>\r\n```\r\n\r\n- data-input: 对 `input` 元素设置该属性可在滑动时实时改变值\r\n- data-track: 滑动轨道\r\n- data-pointer-low: 左侧滑动点\r\n- data-pointer-high: 右侧滑动点\r\n- data-label-low: 左侧滑动值\r\n- data-label-high: 右侧滑动值\r\n\r\n### 事件监听示例：\r\n\r\n``` javascript\r\n\r\nwindow.ahm.range.testing1.on('dragstart', function(e) {\r\n  // e._args.value 当前值\r\n  console.log('dragstart, value:', e._args.value);\r\n});\r\n\r\nwindow.ahm.range.testing1.on('dragmove', function(e) {\r\n  console.log('dragmove, value:', e._args.value);\r\n});\r\n\r\nwindow.ahm.range.testing1.on('dragend', function(e) {\r\n  console.log('dragend, value:', e._args.value);\r\n});\r\n```\r\n\r\n### 事件移除示例：\r\n\r\n``` javascript\r\n\r\nwindow.ahm.range.testing2.on('dragmove', function(e) {\r\n  console.log('dragmove, value:', e._args.value);\r\n  if (e._args.value === '-13,2') {\r\n    window.ahm.range.testing2.off('dragmove');\r\n  }\r\n});\r\n```\r\n\r\n## 选项\r\n\r\n- data-min: `{number}` - [可选] 规定允许的最小值，默认 0（小于或等于最大值）\r\n- data-max: `{number}` - [可选] 规定允许的最大值，默认 100（大于或等于最小值）\r\n- data-step: `{number}` - [可选] 规定合法数字间隔，默认 1（如果 step=\"3\"，则合法的数字是 -3,0,3,6, 以此类推）\r\n- data-value: `{number|Array}` - [必选] 规定默认值，*`number`* 为单点滑动，*`number`* 为多点滑动（处于最小值与最大值之间）\r\n- data-name: `{string}` - [可选] 设定 *`range`* 名称，可通过 *`window.ahm.range[name]`* 来调用实例方法或监听事件\r\n\r\n## 方法\r\n\r\n- setTrack(option): `{min, max, step, value}` - 设置轨道位置\r\n- getValue(): - 获取当前值\r\n- destroy(): - 移除滑动选值\r\n- reset(): - 重新初始化\r\n\r\n## 事件\r\n\r\n- `dragstart` - window.ahm.range[name].on('dragstart', function(e) { ... });\r\n- `dragmove` - window.ahm.range[name].on('dragmove', function(e) { ... });\r\n- `dragend` - window.ahm.range[name].on('dragend', function(e) { ... });\r\n\r\n## 更新日志\r\n要查看最近更新的明细，请参见 [Releases section](https://github.com/xyyjk/MRange/releases)。\r\n\r\n## 许可\r\n\r\n[MIT LICENSE](http://opensource.org/licenses/MIT)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}